# Initial Project

## Project Summary 

Fill in the sections below to provide a brief summary of your project. Each section should have no more than 100 words. Do not edit any of the headings.


### Problem Statement 

Quickly find and locate new Israeli settlements. These settlements were often outposts in early times, characterized by newly reclaimed and exposed plots of land.

### End User 

Journalists, researchers and international organizations. 

Israeli settlements are illegal. Usually when settlements develop to a certain scale, Israel will declare them legal. Early detection can help the international community intervene earlier. Some reporters did a manual blanket search through Google Earth. We hope this helps them resolve the issue quickly.

### Data

Harmonized Sentinel-2 MSI: MultiSpectral Instrument, Level-2A.

Related shp files for the Palestinian Israel area.
<iframe src=' https://data.humdata.org/event/opt-israel-hostilities/?ext_geodata=1&q=&sort=last_modified%20desc&ext_page_size=25# ' width='100%' height='700px'></iframe>

### Methodology

① Land Cover Classification(Random Forest), Feature Selection(NDVI, SAVI) 
② Change detection
③ Morphological Analysis, Area and Shape Filtering
④ Classification(Support Vector Machine, Random Forest)

### Interface

The main function is to provide relevant points to help users quickly locate the latest settlements or outposts. Users can select point options and a specific year to obtain the target position for that year. We also provide quantitative statistics and line charts to help users understand their changing trends.

Additionally, users can select other options such as West Bank borders, Palestinian-controlled areas, Israeli-controlled areas, etc. We also provide layers of some analysis processes to help users better understand the working principle of the application. Users can freely view these layers, such as SAVI analysis results, etc.

## The Application 

:::{.column-page}

<iframe src=' https://ee-casa0025insightexplorers.projects.earthengine.app/view/test ' width='100%' height='700px'></iframe>

:::
## How it Works 


```js
Map.setCenter(35.51898, 33.90153, 15);

Map.setOptions("satellite");

var aoi = ee.Geometry.Point(35.51898, 33.90153).buffer(3000);
```

You can include images:

![Pixelwise T-Test, 2018](images/beirut_change_2020.jpg)

and math:
$$ \Large t = {\frac{\overline{x_1}-\overline{x_2}} {\sqrt{\frac{s^2_1}{n_1} + \frac{s^2_2}{n_2}}}} $$


